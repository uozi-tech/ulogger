name: Publish Python Package to Gitea PyPI

on:
  push:
    tags:
      - 'v*'  # 当推送以 'v' 开头的 tag 时触发（如 v1.0.0）
  workflow_dispatch:  # 允许手动触发工作流
    inputs:
      version:
        description: '要发布的版本号 (例如: 1.0.0)'
        required: true
        type: string
      tag_name:
        description: 'Tag 名称 (例如: v1.0.0)'
        required: false
        type: string
        default: ''

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Extract version from tag or input
      id: get_version
      run: |
        # 手动触发时使用输入的版本号，否则从 tag 名称中提取
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ github.event.inputs.version }}"
          if [[ -n "${{ github.event.inputs.tag_name }}" ]]; then
            TAG_NAME="${{ github.event.inputs.tag_name }}"
          else
            TAG_NAME="v$VERSION"  # 默认格式
          fi
        else
          # 从 tag 名称中提取版本号
          TAG_NAME=${GITHUB_REF#refs/tags/}
          if [[ $TAG_NAME == ulogger-v* ]]; then
            VERSION=${TAG_NAME#ulogger-v}
          elif [[ $TAG_NAME == v* ]]; then
            VERSION=${TAG_NAME#v}
          else
            VERSION=$TAG_NAME
          fi
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        
    - name: Update package version
      run: |
        # 更新 pyproject.toml 中的版本号
        sed -i 's/version = ".*"/version = "${{ steps.get_version.outputs.version }}"/' pyproject.toml
        
    - name: Build package
      run: |
        python -m build
        
    - name: Check package contents
      run: |
        twine check dist/*
        
    - name: Publish to Gitea PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        TWINE_REPOSITORY_URL: https://git.uozi.org/api/packages/uozi/pypi
      run: |
        twine upload dist/*
